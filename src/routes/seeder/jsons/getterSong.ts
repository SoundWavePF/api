import axios from '../../../../node_modules/axios';
import songData from './songsData.json'
const fs = require('fs');

const sleep = (ms: any) => {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function load(){
  let final = []
  for (let i = 0; i < songData.length; i++){
    const albumId = songData[i].albumId
    const songs = []
    for(let j = 0; j < songData[i].data.length; j++){
      const {data} = await axios.get(`https://api.deezer.com/track/${songData[i].data[j].id}`)
      songs.push(data)
      console.log(data)
      await sleep(900)
    }
    const obj = {albumId: albumId, data: songs}
    final.push(obj)
  }
  await fs.writeFileSync("thing.json", JSON.stringify(final));
}

let test = [
  1,
  15275625,
  1129,
  4416052,
  1446,
  226,
  77974,
  13,
  397,
  256493,
  417645,
  763,
  359,
  4877643,
  2533,
  66,
  737,
  8039009,
  3802,
  1196488,
  384236,
  14456487,
  1352674,
  1041159,
  8923,
  5611740,
  6474027,
  13631667,
  7605110,
  384995,
  27,
  145,
  1363197,
  69986032,
  4674484,
  4694728,
  4338602,
  525046,
  1309,
  577666,
  15929,
  103,
  9913990,
  3933641,
  7072729,
  10385666,
  2281211,
  282118,
  5109534,
  647437,
  4834218,
  8005230,
  12041350,
  13234233,
  10087002,
  9262400,
  982471,
  1486761,
  13922163,
  9285150,
  4977670,
  69212362,
  1003272,
  12008088,
  49163791,
  160,
  15691,
  1424602,
  4479,
  7343,
  4494623,
  380955,
  615238,
  330,
  412,
  247379,
  520,
  5002,
  188,
  105,
  8556,
  5128869,
  1350335,
  254,
  1147,
  9112,
  12178,
  4962010,
  1057597,
  4925172,
  7448666,
  1590752,
  1562681,
  165930,
  362326,
  4495513,
  152629,
  3,
  313,
  1622596,
  382937,
  144227,
  15427,
  5603027,
  9776678,
  1188009,
  372635,
  1141019,
  5346966,
  311820,
  1249649,
  426684,
  93674,
  16,
  1353625,
  345052,
  13098657,
  1611773,
  1038426,
  11559031,
  12029862,
  1272674,
  7961888,
  5844239,
  11289472,
  5412407,
  4937383,
  4860761,
  288166,
  4400138,
  51204222,
  13864157,
  5245183,
  48995601,
  107753562,
  1547598,
  7101343,
  1018354,
  5059044,
  11363014,
  1416675,
  1166311,
  240427,
  67547712,
  5297021,
  11815065,
  12585386,
  3922661,
  8613614,
  81285,
  157213512,
  45,
  1453376,
  10684363,
  5995,
  383528,
  4050205,
  1194083,
  74309,
  407188,
  554792,
  398521,
  81764332,
  13200787,
  68334,
  58447102,
  4698748,
  49197782,
  1170312,
  2829671,
  10189722,
  4056850,
  1217914,
  614223,
  12637039,
  10583405,
  517429,
  525643,
  48947801,
  14343187,
  1074021,
  3674271,
  9977062,
  10256642,
  4649104,
  8706544,
  5536564,
  100314362,
  58568762,
  12346612,
  4035046,
  8658114,
  10186978,
  78,
  4613635,
  75156,
  9019,
  17046,
  279082,
  4542250,
  1425767,
  5313805,
  15898,
  14033495,
  9845706,
  3839,
  7208392,
  1256393,
  5849210,
  8043203,
  5578942,
  8409650,
  5531258,
  837,
  4344192,
  5962948,
  9236850,
  2110321,
  101793092,
  7,
  290,
  91,
  10803980,
  1042268,
  70942,
  1417341,
  49544582,
  193162,
  472353,
  12607183,
  6622710,
  1236039,
  11152580,
  9219,
  78051492,
  68248772,
  77256312,
  78685792,
  10668885,
  4660899,
  4438587,
  54946772,
  14917949,
  11025346,
  5416089,
  4390053,
  10177296,
  4491456,
  9334770,
  326042,
  12487862,
  53825042,
  1020198
]

async function artist(){
  let final = []
  for (let i = 0; i < test.length; i++){
    const {data} = await axios.get(`https://api.deezer.com/artist/${test[i]}`)
    final.push(data)
    console.log(data)
    await sleep(900)
  }
  await fs.writeFileSync("artistDataNew.json", JSON.stringify(final));
}

let alumbIdss = [
  47629972,
  6394872,
  211435132,
  296953232,
  289401992,
  220936872,
  97530492,
  6437104,
  243146812,
  13366705,
  169258072,
  42194891,
  215962322,
  131498332,
  298065092,
  143853922,
  118190592,
  1373817,
  275034442,
  163371632,
  321274747,
  103115532,
  298400782,
  665788,
  272465252,
  98095042,
  278853412,
  52661722,
  259671052,
  314517667,
  71435252,
  324514637,
  304016227,
  187703912,
  212435882,
  104066522,
  257250872,
  224018032,
  298804762,
  14590698,
  316164367,
  248672432,
  256304072,
  136387572,
  81383532,
  43783281,
  216835762,
  311152297,
  241158852,
  318577077,
  262243892,
  47631412,
  14860573,
  107970432,
  10677442,
  229382762,
  323903447,
  167645582,
  273548632,
  320594777,
  66249822,
  4235431,
  15811684,
  5234771,
  255047202,
  77857982,
  309684487,
  119615692,
  259337672,
  177855592,
  1209959,
  168005982,
  9048901,
  314359937,
  94947622,
  47531722,
  13780488,
  296319502,
  6736087,
  238077092,
  51913122,
  268901532,
  192701332,
  51833432,
  13139356,
  11255614,
  98839922,
  2768851,
  139576,
  272281492,
  8474155,
  113847172,
  110881032,
  81743232,
  302259,
  1537079,
  99687942,
  9099433,
  319265187,
  286842682,
  223245572,
  660855,
  190810352,
  1318963,
  273199362,
  120135742,
  324240097,
  174178272,
  121153842,
  88672272,
  256261892,
  49896702,
  214086832,
  8743187,
  253055802,
  80973072,
  320098917,
  72000342,
  320315667,
  278729082,
  44267881,
  694909,
  113149872,
  106760852,
  322746337,
  341061,
  280952961,
  167736852,
  125630,
  105323012,
  322019377,
  58993682,
  304628437,
  15817138,
  320376687,
  295363792,
  7508045,
  132061802,
  62225482,
  52435622,
  628269,
  277279122,
  9389598,
  77789802,
  1454822,
  1440802,
  1399197,
  261771042,
  74284872,
  423368,
  72819,
  1440807,
  1205152,
  1441212,
  5814011,
  158398762,
  263962432,
  319163737,
  173339092,
  286884752,
  140536452,
  129721362,
  74650952,
  187144792,
  265762162,
  221495492,
  324216837,
  50321012,
  178468602,
  55369522,
  287533292,
  84231402,
  272203042,
  148878002,
  185840442,
  224255532,
  13366351,
  148683902,
  611040,
  151482212,
  318323987,
  76251542,
  93491232,
  294767042,
  65023242,
  221532202,
  43226241,
  249925992,
  60712222,
  182811182,
  161704302,
  117053822,
  321660907,
  137813122,
  242430582,
  11674708,
  96480212,
  512013,
  295886442,
  179934622,
  70429492,
  307232967,
  57907692,
  70486762,
  70429402,
  69734122,
  15691454,
  310478997,
  1422752,
  154364412,
  73323,
  1422575,
  126369252,
  244134412,
  9230699,
  9230707,
  1213990,
  6223558,
  1215690,
  9230697,
  12330334,
  298326452,
  305516227,
  14996073,
  15478674,
  238407992,
  7964062,
  256337182,
  6157080,
  739505,
  14581500,
  286378362,
  118634182,
  162166492,
  75174402,
  78628302,
  267316172,
  232488792,
  293220672,
  96023342,
  267049992,
  251535522,
  314507387,
  91430,
  1332462,
  361974,
  362284,
  91325352,
  86588,
  10766212,
  11444906,
  130076062,
  45253481,
  312715487,
  170953892,
  170109192,
  258813282,
  166689552,
  101842542,
  322337967,
  319737347,
  107849482,
  90775662,
  47292752,
  133878352,
  170506562,
  104037352,
  42989641,
  259292032,
  96305872,
  100100,
  1433384,
  1378614,
  285380022,
  122384692,
  104663042,
  14191218,
  6720632,
  123833872,
  227520582,
  42989651,
  89478312,
  237989042,
  57846752,
  274208462,
  156536492,
  48068262,
  14972965,
  9741084,
  233800852,
  234248692,
  101490842,
  239177282,
  322134807,
  231721372,
  316273407,
  193601102,
  290784442,
  119128742,
  1424437,
  3775941,
  259182,
  161317,
  294113562,
  278897222,
  259380732,
  117472272,
  227972552,
  56615542,
  7788534,
  13726368,
  303914867,
  85565302,
  162824032,
  14521082,
  63126322,
  238972342,
  161959632,
  107237732,
  110604342,
  160875972,
  42264671,
  83314942,
  362917,
  107956492,
  107963712,
  628219,
  53706092,
  324584,
  305305,
  305239,
  178679902,
  53186912,
  186284122,
  279331362,
  608981,
  302966347,
  240819412,
  163017682,
  285064602,
  227048962,
  140747522,
  318323907,
  180557512,
  254653892,
  143422382,
  205333332,
  14754080,
  150946482,
  3716991,
  5255621,
  1007588,
  379982,
  45390181,
  3717001,
  123520,
  1016234,
  1016233,
  8681797,
  1105444,
  9171317,
  559010,
  864144,
  85872952,
  1168821,
  1532480,
  77010502,
  75851132,
  1164999,
  1165010,
  1165003,
  1165473,
  1165491,
  1165494,
  1165499,
  1165496,
  6742537,
  7129375,
  62095362,
  8614272,
  8173318,
  324960937,
  177863992,
  222784902,
  1210912,
  621090,
  1214741,
  6118489,
  1213439,
  381001,
  13693454,
  6900774,
  98252972,
  1617247,
  62177282,
  98562642,
  921157,
  140761302,
  98840122,
  98251372,
  98251072,
  98425172,
  98254022,
  42499541,
  98839892,
  98557752,
  194163382,
  223922,
  75287,
  72143,
  95975602,
  191585922,
  51833452,
  388094,
  62152162,
  150489032,
  135687592,
  9555726,
  1560979,
  259461032,
  151690782,
  253727292,
  1439567,
  7115605,
  6676586,
  13890272,
  438405,
  98254212,
  7987438,
  98263,
  98447442,
  98560622,
  8983725,
  98253192,
  10532918,
  10968274,
  98251802,
  98262542,
  98254652,
  98250772,
  98251052,
  143813362,
  1016545,
  1053063,
  185957772,
  241007,
  90774,
  1347795,
  176371102,
  13947512,
  113850222,
  1132644,
  109408892,
  100447872,
  100859902,
  317918,
  100944272,
  303413,
  1338085,
  302245,
  305825897,
  1620620,
  103062672,
  340853,
  11758582,
  11011454,
  7517454,
  58703702,
  301111,
  217765,
  90597232,
  687915,
  63156102,
  680539,
  48290192,
  975543,
  639092,
  664237,
  660826,
  660828,
  12783456,
  660832,
  70874562,
  660827,
  11148976,
  118711,
  78418022,
  104857,
  160842492,
  66090322,
  11674234,
  11674230,
  12114248,
  12114242,
  12114240,
  12114262,
  721846,
  384315,
  213339,
  384229,
  467304,
  708965,
  908516,
  1327607,
  384314,
  213021,
  14582072,
  70486242,
  94830112,
  504143,
  217907,
  6412062,
  212377,
  14581972,
  51001232,
  212391,
  14581762,
  14581190,
  102819,
  1316047,
  216487,
  422136,
  230586,
  161962,
  249608,
  6843462,
  322020237,
  299377,
  13308901,
  300108,
  103248,
  119606,
  595243,
  127270232,
  7090505,
  73301752,
  1379031,
  142730522,
  161329,
  14949729,
  51694882,
  173435872,
  76259692,
  110599312,
  189994552,
  9178393,
  81827,
  79341742,
  1321413,
  76092242,
  46248352,
  122366,
  15801900,
  271489,
  8281550,
  341059,
  8310780,
  1398751,
  1431232,
  239152142,
  73850352,
  111750,
  7654077,
  128457092,
  6960122,
  246449,
  84922392,
  123661692,
  39949511,
  6651488,
  54317602,
  56065772,
  1211480,
  78978,
  1209641,
  59614052,
  111665,
  3700811,
  121203162,
  118335152,
  123253032,
  123264662,
  7089085,
  93950182,
  313961017,
  246632,
  6982439,
  306774,
  6949342,
  662668,
  598367,
  122440,
  73012622,
  108231082,
  140897202,
  1208529,
  224774,
  80672462,
  125473,
  911752,
  1209561,
  97830,
  392997,
  78332,
  99129,
  47131362,
  1435460,
  96311,
  13420449,
  253060792,
  81457652,
  400170,
  100341,
  305682517,
  13717022,
  213326,
  6245629,
  1247343
]

async function albumextra(){
  let final = []
  for (let i = 0; i < alumbIdss.length; i++){
    const {data} = await axios.get(`https://api.deezer.com/album/${alumbIdss[i]}`)
    final.push(data)
    console.log(data)
    await sleep(900)
  }
  await fs.writeFileSync("albumPatcherInfo.json", JSON.stringify(final));
}

// getData(songData)
// load()
// artist()
albumextra()